---
import { exampleSource } from "./examples";
interface Props {
    /** [0] — for white theme, [1] — for black theme */
    sources: typeof exampleSource.images;
    alt: string;
    param?: string
}

const { sources, alt, param } = Astro.props;

const images = param ? sources.map((source) => ({src: `${source.src}?${param}`})) : sources

---
<figure>
    <img loading="lazy" data-theming-img data-light={images[0].src} data-dark={images[1].src} src={images[0].src} alt={alt} >
    {param ? <figcaption>{param}</figcaption> : ''}
</figure>

<script is:inline>
    // If you know how to do it better, I will be glad to have suggestions :)

    if (!window.eventListenerAdded) {
        (function() {
            const originalSetItem = localStorage.setItem;
            const originalRemoveItem = localStorage.removeItem;

            localStorage.setItem = function(key, value) {
                const event = new Event('customLocalStorageChange');
                event.key = key;
                event.newValue = value;
                window.dispatchEvent(event);
                originalSetItem.apply(this, arguments);
            };

            localStorage.removeItem = function(key) {
                const event = new Event('customLocalStorageChange');
                event.key = key;
                event.newValue = null;
                window.dispatchEvent(event);
                originalRemoveItem.apply(this, arguments);
            };
        })();

        window.addEventListener('customLocalStorageChange', function(event) {
            const images = document.querySelectorAll('[data-theming-img]');

            for (const img of images) {
                if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !event.newValue) {
                    img.src = img.dataset.dark
                } else if (event.key === 'starlight-theme' && event.newValue === 'dark') {
                    img.src = img.dataset.dark
                } else {
                    img.src = img.dataset.light
                }
            }
        });
        window.eventListenerAdded = true
    }
</script>
